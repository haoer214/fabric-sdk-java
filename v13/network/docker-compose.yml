
version: '2'

networks:
  custom:

services:

  ca.org1.example.com:
    image: hyperledger/fabric-ca:1.4.0
    environment:
      - FABRIC_CA_HOME=/etc/hyperledger/fabric-ca-server
      - FABRIC_CA_SERVER_CA_NAME=ca-org1
      - FABRIC_CA_SERVER_CA_CERTFILE=/etc/hyperledger/fabric-ca-server/ca.org1.example.com-cert.pem
      - FABRIC_CA_SERVER_CA_KEYFILE=/etc/hyperledger/fabric-ca-server/e4f0cb5dfa3520c80a3d5449535ab4d1bb245771ac71f167bf66b5b6fdcfc213_sk
    ports:
      - "7054:7054"
    command: sh -c 'fabric-ca-server start -b admin:adminpw -d'
    volumes:
      - ../network_resources/crypto-config/peerOrganizations/org1.example.com/ca/:/etc/hyperledger/fabric-ca-server
    container_name: ca_peerOrg1
    networks:
      - custom

  orderer.example.com:
    container_name: orderer.example.com
    image: hyperledger/fabric-orderer:1.4.0
    environment:
      - ORDERER_GENERAL_LOGLEVEL=debug
      - ORDERER_GENERAL_LISTENADDRESS=0.0.0.0
      - ORDERER_GENERAL_GENESISMETHOD=file
      - ORDERER_GENERAL_GENESISFILE=/etc/hyperledger/configtx/genesis.block
      - ORDERER_GENERAL_LOCALMSPID=OrdererMSP
      - ORDERER_GENERAL_LOCALMSPDIR=/etc/hyperledger/msp/orderer/msp
      - ORDERER_OPERATIONS_LISTENADDRESS=0.0.0.0:17000
      - ORDERER_METRICS_PROVIDER=prometheus
    working_dir: /opt/gopath/src/github.com/hyperledger/fabric/orderer
    command: orderer
    networks:
      - custom
    ports:
      - 7050:7050
      - 17000:17000
    volumes:
        - ../network_resources/config/:/etc/hyperledger/configtx
        - ../network_resources/crypto-config/ordererOrganizations/example.com/orderers/orderer.example.com/:/etc/hyperledger/msp/orderer
        - ../network_resources/crypto-config/peerOrganizations/org1.example.com/peers/peer0.org1.example.com/:/etc/hyperledger/msp/peerOrg1
        # - ../network_resources/crypto-config/peerOrganizations/org2.example.com/peers/peer0.org2.example.com/:/etc/hyperledger/msp/peerOrg2

  ########################
  couchdb0:
    container_name: couchdb0
    image: hyperledger/fabric-couchdb
    # Populate the COUCHDB_USER and COUCHDB_PASSWORD to set an admin user and password
    # for CouchDB.  This will prevent CouchDB from operating in an "Admin Party" mode.
    environment:
      - COUCHDB_USER=
      - COUCHDB_PASSWORD=
    # Comment/Uncomment the port mapping if you want to hide/expose the CouchDB service,
    # for example map it to utilize Fauxton User Interface in dev environments.
    ports:
      - "17051:5984"
    networks:
      - custom  
      ###############re

  peer0.org1.example.com:
    container_name: peer0.org1.example.com
    image: hyperledger/fabric-peer:1.4.0
    environment:
      - CORE_VM_ENDPOINT=unix:///host/var/run/docker.sock
      - CORE_PEER_ID=peer0.org1.example.com
      - CORE_LOGGING_PEER=debug
      - CORE_CHAINCODE_LOGGING_LEVEL=DEBUG
      - CORE_PEER_LOCALMSPID=Org1MSP
      - CORE_PEER_MSPCONFIGPATH=/etc/hyperledger/fabric/msp
      - CORE_PEER_ADDRESS=peer0.org1.example.com:7051
      # # the following setting starts chaincode containers on the same
      # # bridge network as the peers
      # # https://docs.docker.com/compose/networking/
      - CORE_VM_DOCKER_HOSTCONFIG_NETWORKMODE=network_custom
      #######################
      #######################
      - CORE_LEDGER_STATE_STATEDATABASE=CouchDB
      - CORE_LEDGER_STATE_COUCHDBCONFIG_COUCHDBADDRESS=couchdb0:5984
      # The CORE_LEDGER_STATE_COUCHDBCONFIG_USERNAME and CORE_LEDGER_STATE_COUCHDBCONFIG_PASSWORD
      # provide the credentials for ledger to connect to CouchDB.  The username and password must
      # match the username and password set for the associated CouchDB.
      - CORE_LEDGER_STATE_COUCHDBCONFIG_USERNAME=
      - CORE_LEDGER_STATE_COUCHDBCONFIG_PASSWORD=
      - CORE_OPERATIONS_LISTENADDRESS=0.0.0.0:17001
      - CORE_METRICS_PROVIDER=prometheus
      ###############################
      ##############################re
    working_dir: /opt/gopath/src/github.com/hyperledger/fabric
    command: peer node start
    ports:
      - 7051:7051
      - 17001:17001
    networks:
      - custom
    volumes:
        - /var/run/:/host/var/run/
        - ../network_resources/crypto-config/peerOrganizations/org1.example.com/peers/peer0.org1.example.com/msp:/etc/hyperledger/fabric/msp
        - ../network_resources/crypto-config/peerOrganizations/org1.example.com/users:/etc/hyperledger/msp/users
        - ../network_resources/config:/etc/hyperledger/configtx
    depends_on:
      - orderer.example.com
      - couchdb0  ######re

  #######################
  couchdb1:
    container_name: couchdb1
    image: hyperledger/fabric-couchdb
    # Populate the COUCHDB_USER and COUCHDB_PASSWORD to set an admin user and password
    # for CouchDB.  This will prevent CouchDB from operating in an "Admin Party" mode.
    environment:
      - COUCHDB_USER=
      - COUCHDB_PASSWORD=
    # Comment/Uncomment the port mapping if you want to hide/expose the CouchDB service,
    # for example map it to utilize Fauxton User Interface in dev environments.
    ports:
      - "17056:5984"
    networks:
      - custom  #re
  ####################re

  peer1.org1.example.com:
    container_name: peer1.org1.example.com
    image: hyperledger/fabric-peer:1.4.0
    environment:
      - CORE_VM_ENDPOINT=unix:///host/var/run/docker.sock
      - CORE_PEER_ID=peer1.org1.example.com
      - CORE_LOGGING_PEER=debug
      - CORE_CHAINCODE_LOGGING_LEVEL=DEBUG
      - CORE_PEER_LOCALMSPID=Org1MSP
      - CORE_PEER_MSPCONFIGPATH=/etc/hyperledger/fabric/msp
      - CORE_PEER_ADDRESS=peer1.org1.example.com:7051
      - CORE_VM_DOCKER_HOSTCONFIG_NETWORKMODE=network_custom
      ###################
      #################
      - CORE_LEDGER_STATE_STATEDATABASE=CouchDB
      - CORE_LEDGER_STATE_COUCHDBCONFIG_COUCHDBADDRESS=couchdb1:5984
      # The CORE_LEDGER_STATE_COUCHDBCONFIG_USERNAME and CORE_LEDGER_STATE_COUCHDBCONFIG_PASSWORD
      # provide the credentials for ledger to connect to CouchDB.  The username and password must
      # match the username and password set for the associated CouchDB.
      - CORE_LEDGER_STATE_COUCHDBCONFIG_USERNAME=
      - CORE_LEDGER_STATE_COUCHDBCONFIG_PASSWORD=
      - CORE_OPERATIONS_LISTENADDRESS=0.0.0.0:17002
      - CORE_METRICS_PROVIDER=prometheus
      #############
      ##############re
    working_dir: /opt/gopath/src/github.com/hyperledger/fabric
    command: peer node start
    networks:
      - custom
    ports:
      - 7056:7051
      - 17002:17002
    volumes:
        - /var/run/:/host/var/run/
        - ../network_resources/crypto-config/peerOrganizations/org1.example.com/peers/peer1.org1.example.com/msp:/etc/hyperledger/fabric/msp
        - ../network_resources/crypto-config/peerOrganizations/org1.example.com/users:/etc/hyperledger/msp/users
        - ../network_resources/config:/etc/hyperledger/configtx
    depends_on:
      - orderer.example.com
      - couchdb1 #############re

      ####################
  couchdb2:
    container_name: couchdb2
    image: hyperledger/fabric-couchdb
    # Populate the COUCHDB_USER and COUCHDB_PASSWORD to set an admin user and password
    # for CouchDB.  This will prevent CouchDB from operating in an "Admin Party" mode.
    environment:
      - COUCHDB_USER=
      - COUCHDB_PASSWORD=
    # Comment/Uncomment the port mapping if you want to hide/expose the CouchDB service,
    # for example map it to utilize Fauxton User Interface in dev environments.
    ports:
      - "18051:5984"
    networks:
      - custom  #re
      #####################

  peer2.org1.example.com:
    container_name: peer2.org1.example.com
    image: hyperledger/fabric-peer:1.4.0
    environment:
      - CORE_VM_ENDPOINT=unix:///host/var/run/docker.sock
      - CORE_PEER_ID=peer2.org1.example.com
      - CORE_LOGGING_PEER=debug
      - CORE_CHAINCODE_LOGGING_LEVEL=DEBUG
      - CORE_PEER_LOCALMSPID=Org1MSP
      - CORE_PEER_MSPCONFIGPATH=/etc/hyperledger/fabric/msp
      - CORE_PEER_ADDRESS=peer2.org1.example.com:7051
      - CORE_VM_DOCKER_HOSTCONFIG_NETWORKMODE=network_custom
      #############
      #########3
      - CORE_LEDGER_STATE_STATEDATABASE=CouchDB
      - CORE_LEDGER_STATE_COUCHDBCONFIG_COUCHDBADDRESS=couchdb2:5984
      # The CORE_LEDGER_STATE_COUCHDBCONFIG_USERNAME and CORE_LEDGER_STATE_COUCHDBCONFIG_PASSWORD
      # provide the credentials for ledger to connect to CouchDB.  The username and password must
      # match the username and password set for the associated CouchDB.
      - CORE_LEDGER_STATE_COUCHDBCONFIG_USERNAME=
      - CORE_LEDGER_STATE_COUCHDBCONFIG_PASSWORD=
      - CORE_OPERATIONS_LISTENADDRESS=0.0.0.0:17003
      - CORE_METRICS_PROVIDER=prometheus
      ###################
      ###################
    working_dir: /opt/gopath/src/github.com/hyperledger/fabric
    command: peer node start
    networks:
      - custom
    ports:
      - 8051:7051
      - 17003:17003
    volumes:
        - /var/run/:/host/var/run/
        - ../network_resources/crypto-config/peerOrganizations/org1.example.com/peers/peer2.org1.example.com/msp:/etc/hyperledger/fabric/msp
        - ../network_resources/crypto-config/peerOrganizations/org1.example.com/users:/etc/hyperledger/msp/users
        - ../network_resources/config:/etc/hyperledger/configtx
    depends_on:
      - orderer.example.com
      - couchdb2 #############re

#############################
  couchdb3:
    container_name: couchdb3
    image: hyperledger/fabric-couchdb
    # Populate the COUCHDB_USER and COUCHDB_PASSWORD to set an admin user and password
    # for CouchDB.  This will prevent CouchDB from operating in an "Admin Party" mode.
    environment:
      - COUCHDB_USER=
      - COUCHDB_PASSWORD=
    # Comment/Uncomment the port mapping if you want to hide/expose the CouchDB service,
    # for example map it to utilize Fauxton User Interface in dev environments.
    ports:
      - "18056:5984"
    networks:
      - custom  #re
      ###############################

  peer3.org1.example.com:
    container_name: peer3.org1.example.com
    image: hyperledger/fabric-peer:1.4.0
    environment:
      - CORE_VM_ENDPOINT=unix:///host/var/run/docker.sock
      - CORE_PEER_ID=peer3.org1.example.com
      - CORE_LOGGING_PEER=debug
      - CORE_CHAINCODE_LOGGING_LEVEL=DEBUG
      - CORE_PEER_LOCALMSPID=Org1MSP
      - CORE_PEER_MSPCONFIGPATH=/etc/hyperledger/fabric/msp
      - CORE_PEER_ADDRESS=peer3.org1.example.com:7051
      - CORE_VM_DOCKER_HOSTCONFIG_NETWORKMODE=network_custom
      ################################
      ################################
      - CORE_LEDGER_STATE_STATEDATABASE=CouchDB
      - CORE_LEDGER_STATE_COUCHDBCONFIG_COUCHDBADDRESS=couchdb3:5984
      # The CORE_LEDGER_STATE_COUCHDBCONFIG_USERNAME and CORE_LEDGER_STATE_COUCHDBCONFIG_PASSWORD
      # provide the credentials for ledger to connect to CouchDB.  The username and password must
      # match the username and password set for the associated CouchDB.
      - CORE_LEDGER_STATE_COUCHDBCONFIG_USERNAME=
      - CORE_LEDGER_STATE_COUCHDBCONFIG_PASSWORD=
      - CORE_OPERATIONS_LISTENADDRESS=0.0.0.0:17004
      - CORE_METRICS_PROVIDER=prometheus
      ##################################3
      #################################
    working_dir: /opt/gopath/src/github.com/hyperledger/fabric
    command: peer node start
    networks:
      - custom
    ports:
      - 8056:7051
      - 17004:17004
    volumes:
        - /var/run/:/host/var/run/
        - ../network_resources/crypto-config/peerOrganizations/org1.example.com/peers/peer3.org1.example.com/msp:/etc/hyperledger/fabric/msp
        - ../network_resources/crypto-config/peerOrganizations/org1.example.com/users:/etc/hyperledger/msp/users
        - ../network_resources/config:/etc/hyperledger/configtx
    depends_on:
      - orderer.example.com
      - couchdb3 #############re

#############################
  couchdb4:
    container_name: couchdb4
    image: hyperledger/fabric-couchdb
    # Populate the COUCHDB_USER and COUCHDB_PASSWORD to set an admin user and password
    # for CouchDB.  This will prevent CouchDB from operating in an "Admin Party" mode.
    environment:
      - COUCHDB_USER=
      - COUCHDB_PASSWORD=
    # Comment/Uncomment the port mapping if you want to hide/expose the CouchDB service,
    # for example map it to utilize Fauxton User Interface in dev environments.
    ports:
      - "19051:5984"
    networks:
      - custom  #re
      ###############################

  peer4.org1.example.com:
    container_name: peer4.org1.example.com
    image: hyperledger/fabric-peer:1.4.0
    environment:
      - CORE_VM_ENDPOINT=unix:///host/var/run/docker.sock
      - CORE_PEER_ID=peer4.org1.example.com
      - CORE_LOGGING_PEER=debug
      - CORE_CHAINCODE_LOGGING_LEVEL=DEBUG
      - CORE_PEER_LOCALMSPID=Org1MSP
      - CORE_PEER_MSPCONFIGPATH=/etc/hyperledger/fabric/msp
      - CORE_PEER_ADDRESS=peer4.org1.example.com:7051
      - CORE_VM_DOCKER_HOSTCONFIG_NETWORKMODE=network_custom
      ################################
      ################################
      - CORE_LEDGER_STATE_STATEDATABASE=CouchDB
      - CORE_LEDGER_STATE_COUCHDBCONFIG_COUCHDBADDRESS=couchdb4:5984
      # The CORE_LEDGER_STATE_COUCHDBCONFIG_USERNAME and CORE_LEDGER_STATE_COUCHDBCONFIG_PASSWORD
      # provide the credentials for ledger to connect to CouchDB.  The username and password must
      # match the username and password set for the associated CouchDB.
      - CORE_LEDGER_STATE_COUCHDBCONFIG_USERNAME=
      - CORE_LEDGER_STATE_COUCHDBCONFIG_PASSWORD=
      - CORE_OPERATIONS_LISTENADDRESS=0.0.0.0:17005
      - CORE_METRICS_PROVIDER=prometheus
      ##################################3
      #################################
    working_dir: /opt/gopath/src/github.com/hyperledger/fabric
    command: peer node start
    networks:
      - custom
    ports:
      - 9051:7051
      - 17005:17005
    volumes:
        - /var/run/:/host/var/run/
        - ../network_resources/crypto-config/peerOrganizations/org1.example.com/peers/peer4.org1.example.com/msp:/etc/hyperledger/fabric/msp
        - ../network_resources/crypto-config/peerOrganizations/org1.example.com/users:/etc/hyperledger/msp/users
        - ../network_resources/config:/etc/hyperledger/configtx
    depends_on:
      - orderer.example.com
      - couchdb4 #############re



# #############################
#   couchdb5:
#     container_name: couchdb5
#     image: hyperledger/fabric-couchdb
#     # Populate the COUCHDB_USER and COUCHDB_PASSWORD to set an admin user and password
#     # for CouchDB.  This will prevent CouchDB from operating in an "Admin Party" mode.
#     environment:
#       - COUCHDB_USER=
#       - COUCHDB_PASSWORD=
#     # Comment/Uncomment the port mapping if you want to hide/expose the CouchDB service,
#     # for example map it to utilize Fauxton User Interface in dev environments.
#     ports:
#       - "6484:5984"
#     networks:
#       - custom  #re
#       ###############################

#   peer5.org1.example.com:
#     container_name: peer5.org1.example.com
#     image: hyperledger/fabric-peer:1.4.0
#     environment:
#       - CORE_VM_ENDPOINT=unix:///host/var/run/docker.sock
#       - CORE_PEER_ID=peer5.org1.example.com
#       - CORE_LOGGING_PEER=debug
#       - CORE_CHAINCODE_LOGGING_LEVEL=DEBUG
#       - CORE_PEER_LOCALMSPID=Org1MSP
#       - CORE_PEER_MSPCONFIGPATH=/etc/hyperledger/fabric/msp
#       - CORE_PEER_ADDRESS=peer5.org1.example.com:7051
#       - CORE_VM_DOCKER_HOSTCONFIG_NETWORKMODE=network_custom
#       ################################
#       ################################
#       - CORE_LEDGER_STATE_STATEDATABASE=CouchDB
#       - CORE_LEDGER_STATE_COUCHDBCONFIG_COUCHDBADDRESS=couchdb5:5984
#       # The CORE_LEDGER_STATE_COUCHDBCONFIG_USERNAME and CORE_LEDGER_STATE_COUCHDBCONFIG_PASSWORD
#       # provide the credentials for ledger to connect to CouchDB.  The username and password must
#       # match the username and password set for the associated CouchDB.
#       - CORE_LEDGER_STATE_COUCHDBCONFIG_USERNAME=
#       - CORE_LEDGER_STATE_COUCHDBCONFIG_PASSWORD=
#       ##################################3
#       #################################
#     working_dir: /opt/gopath/src/github.com/hyperledger/fabric
#     command: peer node start
#     networks:
#       - custom
#     ports:
#       - 9056:7051
#     volumes:
#         - /var/run/:/host/var/run/
#         - ../network_resources/crypto-config/peerOrganizations/org1.example.com/peers/peer5.org1.example.com/msp:/etc/hyperledger/fabric/msp
#         - ../network_resources/crypto-config/peerOrganizations/org1.example.com/users:/etc/hyperledger/msp/users
#         - ../network_resources/config:/etc/hyperledger/configtx
#     depends_on:
#       - orderer.example.com
#       - couchdb5 #############re


# #############################
#   couchdb6:
#     container_name: couchdb6
#     image: hyperledger/fabric-couchdb
#     # Populate the COUCHDB_USER and COUCHDB_PASSWORD to set an admin user and password
#     # for CouchDB.  This will prevent CouchDB from operating in an "Admin Party" mode.
#     environment:
#       - COUCHDB_USER=
#       - COUCHDB_PASSWORD=
#     # Comment/Uncomment the port mapping if you want to hide/expose the CouchDB service,
#     # for example map it to utilize Fauxton User Interface in dev environments.
#     ports:
#       - "6584:5984"
#     networks:
#       - custom  #re
#       ###############################

#   peer6.org1.example.com:
#     container_name: peer6.org1.example.com
#     image: hyperledger/fabric-peer:1.4.0
#     environment:
#       - CORE_VM_ENDPOINT=unix:///host/var/run/docker.sock
#       - CORE_PEER_ID=peer6.org1.example.com
#       - CORE_LOGGING_PEER=debug
#       - CORE_CHAINCODE_LOGGING_LEVEL=DEBUG
#       - CORE_PEER_LOCALMSPID=Org1MSP
#       - CORE_PEER_MSPCONFIGPATH=/etc/hyperledger/fabric/msp
#       - CORE_PEER_ADDRESS=peer6.org1.example.com:7051
#       - CORE_VM_DOCKER_HOSTCONFIG_NETWORKMODE=network_custom
#       ################################
#       ################################
#       - CORE_LEDGER_STATE_STATEDATABASE=CouchDB
#       - CORE_LEDGER_STATE_COUCHDBCONFIG_COUCHDBADDRESS=couchdb6:5984
#       # The CORE_LEDGER_STATE_COUCHDBCONFIG_USERNAME and CORE_LEDGER_STATE_COUCHDBCONFIG_PASSWORD
#       # provide the credentials for ledger to connect to CouchDB.  The username and password must
#       # match the username and password set for the associated CouchDB.
#       - CORE_LEDGER_STATE_COUCHDBCONFIG_USERNAME=
#       - CORE_LEDGER_STATE_COUCHDBCONFIG_PASSWORD=
#       ##################################3
#       #################################
#     working_dir: /opt/gopath/src/github.com/hyperledger/fabric
#     command: peer node start
#     networks:
#       - custom
#     ports:
#       - 1051:7051
#     volumes:
#         - /var/run/:/host/var/run/
#         - ../network_resources/crypto-config/peerOrganizations/org1.example.com/peers/peer6.org1.example.com/msp:/etc/hyperledger/fabric/msp
#         - ../network_resources/crypto-config/peerOrganizations/org1.example.com/users:/etc/hyperledger/msp/users
#         - ../network_resources/config:/etc/hyperledger/configtx
#     depends_on:
#       - orderer.example.com
#       - couchdb6 #############re

# #############################
#   couchdb7:
#     container_name: couchdb7
#     image: hyperledger/fabric-couchdb
#     # Populate the COUCHDB_USER and COUCHDB_PASSWORD to set an admin user and password
#     # for CouchDB.  This will prevent CouchDB from operating in an "Admin Party" mode.
#     environment:
#       - COUCHDB_USER=
#       - COUCHDB_PASSWORD=
#     # Comment/Uncomment the port mapping if you want to hide/expose the CouchDB service,
#     # for example map it to utilize Fauxton User Interface in dev environments.
#     ports:
#       - "6684:5984"
#     networks:
#       - custom  #re
#       ###############################

#   peer7.org1.example.com:
#     container_name: peer7.org1.example.com
#     image: hyperledger/fabric-peer:1.4.0
#     environment:
#       - CORE_VM_ENDPOINT=unix:///host/var/run/docker.sock
#       - CORE_PEER_ID=peer7.org1.example.com
#       - CORE_LOGGING_PEER=debug
#       - CORE_CHAINCODE_LOGGING_LEVEL=DEBUG
#       - CORE_PEER_LOCALMSPID=Org1MSP
#       - CORE_PEER_MSPCONFIGPATH=/etc/hyperledger/fabric/msp
#       - CORE_PEER_ADDRESS=peer7.org1.example.com:7051
#       - CORE_VM_DOCKER_HOSTCONFIG_NETWORKMODE=network_custom
#       ################################
#       ################################
#       - CORE_LEDGER_STATE_STATEDATABASE=CouchDB
#       - CORE_LEDGER_STATE_COUCHDBCONFIG_COUCHDBADDRESS=couchdb7:5984
#       # The CORE_LEDGER_STATE_COUCHDBCONFIG_USERNAME and CORE_LEDGER_STATE_COUCHDBCONFIG_PASSWORD
#       # provide the credentials for ledger to connect to CouchDB.  The username and password must
#       # match the username and password set for the associated CouchDB.
#       - CORE_LEDGER_STATE_COUCHDBCONFIG_USERNAME=
#       - CORE_LEDGER_STATE_COUCHDBCONFIG_PASSWORD=
#       ##################################3
#       #################################
#     working_dir: /opt/gopath/src/github.com/hyperledger/fabric
#     command: peer node start
#     networks:
#       - custom
#     ports:
#       - 1056:7051
#     volumes:
#         - /var/run/:/host/var/run/
#         - ../network_resources/crypto-config/peerOrganizations/org1.example.com/peers/peer7.org1.example.com/msp:/etc/hyperledger/fabric/msp
#         - ../network_resources/crypto-config/peerOrganizations/org1.example.com/users:/etc/hyperledger/msp/users
#         - ../network_resources/config:/etc/hyperledger/configtx
#     depends_on:
#       - orderer.example.com
#       - couchdb7 #############re


# #############################
#   couchdb8:
#     container_name: couchdb8
#     image: hyperledger/fabric-couchdb
#     # Populate the COUCHDB_USER and COUCHDB_PASSWORD to set an admin user and password
#     # for CouchDB.  This will prevent CouchDB from operating in an "Admin Party" mode.
#     environment:
#       - COUCHDB_USER=
#       - COUCHDB_PASSWORD=
#     # Comment/Uncomment the port mapping if you want to hide/expose the CouchDB service,
#     # for example map it to utilize Fauxton User Interface in dev environments.
#     ports:
#       - "6784:5984"
#     networks:
#       - custom  #re
#       ###############################

#   peer8.org1.example.com:
#     container_name: peer8.org1.example.com
#     image: hyperledger/fabric-peer:1.4.0
#     environment:
#       - CORE_VM_ENDPOINT=unix:///host/var/run/docker.sock
#       - CORE_PEER_ID=peer8.org1.example.com
#       - CORE_LOGGING_PEER=debug
#       - CORE_CHAINCODE_LOGGING_LEVEL=DEBUG
#       - CORE_PEER_LOCALMSPID=Org1MSP
#       - CORE_PEER_MSPCONFIGPATH=/etc/hyperledger/fabric/msp
#       - CORE_PEER_ADDRESS=peer8.org1.example.com:7051
#       - CORE_VM_DOCKER_HOSTCONFIG_NETWORKMODE=network_custom
#       ################################
#       ################################
#       - CORE_LEDGER_STATE_STATEDATABASE=CouchDB
#       - CORE_LEDGER_STATE_COUCHDBCONFIG_COUCHDBADDRESS=couchdb8:5984
#       # The CORE_LEDGER_STATE_COUCHDBCONFIG_USERNAME and CORE_LEDGER_STATE_COUCHDBCONFIG_PASSWORD
#       # provide the credentials for ledger to connect to CouchDB.  The username and password must
#       # match the username and password set for the associated CouchDB.
#       - CORE_LEDGER_STATE_COUCHDBCONFIG_USERNAME=
#       - CORE_LEDGER_STATE_COUCHDBCONFIG_PASSWORD=
#       ##################################3
#       #################################
#     working_dir: /opt/gopath/src/github.com/hyperledger/fabric
#     command: peer node start
#     networks:
#       - custom
#     ports:
#       - 2051:7051
#     volumes:
#         - /var/run/:/host/var/run/
#         - ../network_resources/crypto-config/peerOrganizations/org1.example.com/peers/peer8.org1.example.com/msp:/etc/hyperledger/fabric/msp
#         - ../network_resources/crypto-config/peerOrganizations/org1.example.com/users:/etc/hyperledger/msp/users
#         - ../network_resources/config:/etc/hyperledger/configtx
#     depends_on:
#       - orderer.example.com
#       - couchdb8 #############re



# #############################
#   couchdb9:
#     container_name: couchdb9
#     image: hyperledger/fabric-couchdb
#     # Populate the COUCHDB_USER and COUCHDB_PASSWORD to set an admin user and password
#     # for CouchDB.  This will prevent CouchDB from operating in an "Admin Party" mode.
#     environment:
#       - COUCHDB_USER=
#       - COUCHDB_PASSWORD=
#     # Comment/Uncomment the port mapping if you want to hide/expose the CouchDB service,
#     # for example map it to utilize Fauxton User Interface in dev environments.
#     ports:
#       - "6884:5984"
#     networks:
#       - custom  #re
#       ###############################

#   peer9.org1.example.com:
#     container_name: peer9.org1.example.com
#     image: hyperledger/fabric-peer:1.4.0
#     environment:
#       - CORE_VM_ENDPOINT=unix:///host/var/run/docker.sock
#       - CORE_PEER_ID=peer9.org1.example.com
#       - CORE_LOGGING_PEER=debug
#       - CORE_CHAINCODE_LOGGING_LEVEL=DEBUG
#       - CORE_PEER_LOCALMSPID=Org1MSP
#       - CORE_PEER_MSPCONFIGPATH=/etc/hyperledger/fabric/msp
#       - CORE_PEER_ADDRESS=peer9.org1.example.com:7051
#       - CORE_VM_DOCKER_HOSTCONFIG_NETWORKMODE=network_custom
#       ################################
#       ################################
#       - CORE_LEDGER_STATE_STATEDATABASE=CouchDB
#       - CORE_LEDGER_STATE_COUCHDBCONFIG_COUCHDBADDRESS=couchdb9:5984
#       # The CORE_LEDGER_STATE_COUCHDBCONFIG_USERNAME and CORE_LEDGER_STATE_COUCHDBCONFIG_PASSWORD
#       # provide the credentials for ledger to connect to CouchDB.  The username and password must
#       # match the username and password set for the associated CouchDB.
#       - CORE_LEDGER_STATE_COUCHDBCONFIG_USERNAME=
#       - CORE_LEDGER_STATE_COUCHDBCONFIG_PASSWORD=
#       ##################################3
#       #################################
#     working_dir: /opt/gopath/src/github.com/hyperledger/fabric
#     command: peer node start
#     networks:
#       - custom
#     ports:
#       - 2056:7051
#     volumes:
#         - /var/run/:/host/var/run/
#         - ../network_resources/crypto-config/peerOrganizations/org1.example.com/peers/peer9.org1.example.com/msp:/etc/hyperledger/fabric/msp
#         - ../network_resources/crypto-config/peerOrganizations/org1.example.com/users:/etc/hyperledger/msp/users
#         - ../network_resources/config:/etc/hyperledger/configtx
#     depends_on:
#       - orderer.example.com
#       - couchdb9 #############re


# #############################
#   couchdb10:
#     container_name: couchdb10
#     image: hyperledger/fabric-couchdb
#     # Populate the COUCHDB_USER and COUCHDB_PASSWORD to set an admin user and password
#     # for CouchDB.  This will prevent CouchDB from operating in an "Admin Party" mode.
#     environment:
#       - COUCHDB_USER=
#       - COUCHDB_PASSWORD=
#     # Comment/Uncomment the port mapping if you want to hide/expose the CouchDB service,
#     # for example map it to utilize Fauxton User Interface in dev environments.
#     ports:
#       - "6984:5984"
#     networks:
#       - custom  #re
#       ###############################

#   peer10.org1.example.com:
#     container_name: peer10.org1.example.com
#     image: hyperledger/fabric-peer:1.4.0
#     environment:
#       - CORE_VM_ENDPOINT=unix:///host/var/run/docker.sock
#       - CORE_PEER_ID=peer10.org1.example.com
#       - CORE_LOGGING_PEER=debug
#       - CORE_CHAINCODE_LOGGING_LEVEL=DEBUG
#       - CORE_PEER_LOCALMSPID=Org1MSP
#       - CORE_PEER_MSPCONFIGPATH=/etc/hyperledger/fabric/msp
#       - CORE_PEER_ADDRESS=peer10.org1.example.com:7051
#       - CORE_VM_DOCKER_HOSTCONFIG_NETWORKMODE=network_custom
#       ################################
#       ################################
#       - CORE_LEDGER_STATE_STATEDATABASE=CouchDB
#       - CORE_LEDGER_STATE_COUCHDBCONFIG_COUCHDBADDRESS=couchdb10:5984
#       # The CORE_LEDGER_STATE_COUCHDBCONFIG_USERNAME and CORE_LEDGER_STATE_COUCHDBCONFIG_PASSWORD
#       # provide the credentials for ledger to connect to CouchDB.  The username and password must
#       # match the username and password set for the associated CouchDB.
#       - CORE_LEDGER_STATE_COUCHDBCONFIG_USERNAME=
#       - CORE_LEDGER_STATE_COUCHDBCONFIG_PASSWORD=
#       ##################################3
#       #################################
#     working_dir: /opt/gopath/src/github.com/hyperledger/fabric
#     command: peer node start
#     networks:
#       - custom
#     ports:
#       - 3051:7051
#     volumes:
#         - /var/run/:/host/var/run/
#         - ../network_resources/crypto-config/peerOrganizations/org1.example.com/peers/peer10.org1.example.com/msp:/etc/hyperledger/fabric/msp
#         - ../network_resources/crypto-config/peerOrganizations/org1.example.com/users:/etc/hyperledger/msp/users
#         - ../network_resources/config:/etc/hyperledger/configtx
#     depends_on:
#       - orderer.example.com
#       - couchdb10 #############re

# #############################
#   couchdb11:
#     container_name: couchdb11
#     image: hyperledger/fabric-couchdb
#     # Populate the COUCHDB_USER and COUCHDB_PASSWORD to set an admin user and password
#     # for CouchDB.  This will prevent CouchDB from operating in an "Admin Party" mode.
#     environment:
#       - COUCHDB_USER=
#       - COUCHDB_PASSWORD=
#     # Comment/Uncomment the port mapping if you want to hide/expose the CouchDB service,
#     # for example map it to utilize Fauxton User Interface in dev environments.
#     ports:
#       - "7084:5984"
#     networks:
#       - custom  #re
#       ###############################

#   peer11.org1.example.com:
#     container_name: peer11.org1.example.com
#     image: hyperledger/fabric-peer:1.4.0
#     environment:
#       - CORE_VM_ENDPOINT=unix:///host/var/run/docker.sock
#       - CORE_PEER_ID=peer11.org1.example.com
#       - CORE_LOGGING_PEER=debug
#       - CORE_CHAINCODE_LOGGING_LEVEL=DEBUG
#       - CORE_PEER_LOCALMSPID=Org1MSP
#       - CORE_PEER_MSPCONFIGPATH=/etc/hyperledger/fabric/msp
#       - CORE_PEER_ADDRESS=peer11.org1.example.com:7051
#       - CORE_VM_DOCKER_HOSTCONFIG_NETWORKMODE=network_custom
#       ################################
#       ################################
#       - CORE_LEDGER_STATE_STATEDATABASE=CouchDB
#       - CORE_LEDGER_STATE_COUCHDBCONFIG_COUCHDBADDRESS=couchdb11:5984
#       # The CORE_LEDGER_STATE_COUCHDBCONFIG_USERNAME and CORE_LEDGER_STATE_COUCHDBCONFIG_PASSWORD
#       # provide the credentials for ledger to connect to CouchDB.  The username and password must
#       # match the username and password set for the associated CouchDB.
#       - CORE_LEDGER_STATE_COUCHDBCONFIG_USERNAME=
#       - CORE_LEDGER_STATE_COUCHDBCONFIG_PASSWORD=
#       ##################################3
#       #################################
#     working_dir: /opt/gopath/src/github.com/hyperledger/fabric
#     command: peer node start
#     networks:
#       - custom
#     ports:
#       - 3056:7051
#     volumes:
#         - /var/run/:/host/var/run/
#         - ../network_resources/crypto-config/peerOrganizations/org1.example.com/peers/peer11.org1.example.com/msp:/etc/hyperledger/fabric/msp
#         - ../network_resources/crypto-config/peerOrganizations/org1.example.com/users:/etc/hyperledger/msp/users
#         - ../network_resources/config:/etc/hyperledger/configtx
#     depends_on:
#       - orderer.example.com
#       - couchdb11 #############re

# #############################
#   couchdb12:
#     container_name: couchdb12
#     image: hyperledger/fabric-couchdb
#     # Populate the COUCHDB_USER and COUCHDB_PASSWORD to set an admin user and password
#     # for CouchDB.  This will prevent CouchDB from operating in an "Admin Party" mode.
#     environment:
#       - COUCHDB_USER=
#       - COUCHDB_PASSWORD=
#     # Comment/Uncomment the port mapping if you want to hide/expose the CouchDB service,
#     # for example map it to utilize Fauxton User Interface in dev environments.
#     ports:
#       - "7184:5984"
#     networks:
#       - custom  #re
#       ###############################

#   peer12.org1.example.com:
#     container_name: peer12.org1.example.com
#     image: hyperledger/fabric-peer:1.4.0
#     environment:
#       - CORE_VM_ENDPOINT=unix:///host/var/run/docker.sock
#       - CORE_PEER_ID=peer12.org1.example.com
#       - CORE_LOGGING_PEER=debug
#       - CORE_CHAINCODE_LOGGING_LEVEL=DEBUG
#       - CORE_PEER_LOCALMSPID=Org1MSP
#       - CORE_PEER_MSPCONFIGPATH=/etc/hyperledger/fabric/msp
#       - CORE_PEER_ADDRESS=peer12.org1.example.com:7051
#       - CORE_VM_DOCKER_HOSTCONFIG_NETWORKMODE=network_custom
#       ################################
#       ################################
#       - CORE_LEDGER_STATE_STATEDATABASE=CouchDB
#       - CORE_LEDGER_STATE_COUCHDBCONFIG_COUCHDBADDRESS=couchdb12:5984
#       # The CORE_LEDGER_STATE_COUCHDBCONFIG_USERNAME and CORE_LEDGER_STATE_COUCHDBCONFIG_PASSWORD
#       # provide the credentials for ledger to connect to CouchDB.  The username and password must
#       # match the username and password set for the associated CouchDB.
#       - CORE_LEDGER_STATE_COUCHDBCONFIG_USERNAME=
#       - CORE_LEDGER_STATE_COUCHDBCONFIG_PASSWORD=
#       ##################################3
#       #################################
#     working_dir: /opt/gopath/src/github.com/hyperledger/fabric
#     command: peer node start
#     networks:
#       - custom
#     ports:
#       - 4051:7051
#     volumes:
#         - /var/run/:/host/var/run/
#         - ../network_resources/crypto-config/peerOrganizations/org1.example.com/peers/peer12.org1.example.com/msp:/etc/hyperledger/fabric/msp
#         - ../network_resources/crypto-config/peerOrganizations/org1.example.com/users:/etc/hyperledger/msp/users
#         - ../network_resources/config:/etc/hyperledger/configtx
#     depends_on:
#       - orderer.example.com
#       - couchdb12 #############re


# #############################
#   couchdb13:
#     container_name: couchdb13
#     image: hyperledger/fabric-couchdb
#     # Populate the COUCHDB_USER and COUCHDB_PASSWORD to set an admin user and password
#     # for CouchDB.  This will prevent CouchDB from operating in an "Admin Party" mode.
#     environment:
#       - COUCHDB_USER=
#       - COUCHDB_PASSWORD=
#     # Comment/Uncomment the port mapping if you want to hide/expose the CouchDB service,
#     # for example map it to utilize Fauxton User Interface in dev environments.
#     ports:
#       - "7284:5984"
#     networks:
#       - custom  #re
#       ###############################

#   peer13.org1.example.com:
#     container_name: peer13.org1.example.com
#     image: hyperledger/fabric-peer:1.4.0
#     environment:
#       - CORE_VM_ENDPOINT=unix:///host/var/run/docker.sock
#       - CORE_PEER_ID=peer13.org1.example.com
#       - CORE_LOGGING_PEER=debug
#       - CORE_CHAINCODE_LOGGING_LEVEL=DEBUG
#       - CORE_PEER_LOCALMSPID=Org1MSP
#       - CORE_PEER_MSPCONFIGPATH=/etc/hyperledger/fabric/msp
#       - CORE_PEER_ADDRESS=peer13.org1.example.com:7051
#       - CORE_VM_DOCKER_HOSTCONFIG_NETWORKMODE=network_custom
#       ################################
#       ################################
#       - CORE_LEDGER_STATE_STATEDATABASE=CouchDB
#       - CORE_LEDGER_STATE_COUCHDBCONFIG_COUCHDBADDRESS=couchdb13:5984
#       # The CORE_LEDGER_STATE_COUCHDBCONFIG_USERNAME and CORE_LEDGER_STATE_COUCHDBCONFIG_PASSWORD
#       # provide the credentials for ledger to connect to CouchDB.  The username and password must
#       # match the username and password set for the associated CouchDB.
#       - CORE_LEDGER_STATE_COUCHDBCONFIG_USERNAME=
#       - CORE_LEDGER_STATE_COUCHDBCONFIG_PASSWORD=
#       ##################################3
#       #################################
#     working_dir: /opt/gopath/src/github.com/hyperledger/fabric
#     command: peer node start
#     networks:
#       - custom
#     ports:
#       - 4056:7051
#     volumes:
#         - /var/run/:/host/var/run/
#         - ../network_resources/crypto-config/peerOrganizations/org1.example.com/peers/peer13.org1.example.com/msp:/etc/hyperledger/fabric/msp
#         - ../network_resources/crypto-config/peerOrganizations/org1.example.com/users:/etc/hyperledger/msp/users
#         - ../network_resources/config:/etc/hyperledger/configtx
#     depends_on:
#       - orderer.example.com
#       - couchdb13 #############re


# #############################
#   couchdb14:
#     container_name: couchdb14
#     image: hyperledger/fabric-couchdb
#     # Populate the COUCHDB_USER and COUCHDB_PASSWORD to set an admin user and password
#     # for CouchDB.  This will prevent CouchDB from operating in an "Admin Party" mode.
#     environment:
#       - COUCHDB_USER=
#       - COUCHDB_PASSWORD=
#     # Comment/Uncomment the port mapping if you want to hide/expose the CouchDB service,
#     # for example map it to utilize Fauxton User Interface in dev environments.
#     ports:
#       - "7384:5984"
#     networks:
#       - custom  #re
#       ###############################

#   peer14.org1.example.com:
#     container_name: peer14.org1.example.com
#     image: hyperledger/fabric-peer:1.4.0
#     environment:
#       - CORE_VM_ENDPOINT=unix:///host/var/run/docker.sock
#       - CORE_PEER_ID=peer14.org1.example.com
#       - CORE_LOGGING_PEER=debug
#       - CORE_CHAINCODE_LOGGING_LEVEL=DEBUG
#       - CORE_PEER_LOCALMSPID=Org1MSP
#       - CORE_PEER_MSPCONFIGPATH=/etc/hyperledger/fabric/msp
#       - CORE_PEER_ADDRESS=peer14.org1.example.com:7051
#       - CORE_VM_DOCKER_HOSTCONFIG_NETWORKMODE=network_custom
#       ################################
#       ################################
#       - CORE_LEDGER_STATE_STATEDATABASE=CouchDB
#       - CORE_LEDGER_STATE_COUCHDBCONFIG_COUCHDBADDRESS=couchdb14:5984
#       # The CORE_LEDGER_STATE_COUCHDBCONFIG_USERNAME and CORE_LEDGER_STATE_COUCHDBCONFIG_PASSWORD
#       # provide the credentials for ledger to connect to CouchDB.  The username and password must
#       # match the username and password set for the associated CouchDB.
#       - CORE_LEDGER_STATE_COUCHDBCONFIG_USERNAME=
#       - CORE_LEDGER_STATE_COUCHDBCONFIG_PASSWORD=
#       ##################################3
#       #################################
#     working_dir: /opt/gopath/src/github.com/hyperledger/fabric
#     command: peer node start
#     networks:
#       - custom
#     ports:
#       - 5051:7051
#     volumes:
#         - /var/run/:/host/var/run/
#         - ../network_resources/crypto-config/peerOrganizations/org1.example.com/peers/peer14.org1.example.com/msp:/etc/hyperledger/fabric/msp
#         - ../network_resources/crypto-config/peerOrganizations/org1.example.com/users:/etc/hyperledger/msp/users
#         - ../network_resources/config:/etc/hyperledger/configtx
#     depends_on:
#       - orderer.example.com
#       - couchdb14 #############re

